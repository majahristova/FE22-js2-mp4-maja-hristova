{"mappings":"AA6DA,MAAMA,EAAgBC,SAASC,iBAAiB,iBAC1CC,EAAmBF,SAASC,iBAAiB,oBAC7CE,EAAcH,SAASI,cAAc,iBACrCC,EAAeL,SAASI,cAAc,iBACtCE,EAAiBN,SAASI,cAAc,oBACxCG,EAAuBP,SAASI,cAAc,0BAC9CI,EAAsBR,SAASI,cAAc,yBAC7CK,EAAa,IApEnB,MACIC,qBACAC,oBACAC,UACAC,eAAiB,GACjBC,gBAAkB,GAClBC,YAAYL,EAAsBC,GAC9BK,KAAKN,qBAAuBA,EAC5BM,KAAKL,oBAAsBA,EAC3BK,KAAKC,OACT,CACAA,QACID,KAAKH,eAAiB,GACtBG,KAAKF,gBAAkB,EAC3B,CACAI,aAAaC,GACTH,KAAKH,eAAiBG,KAAKH,eAAeO,WAAaD,EAAOC,UAClE,CACAC,eAAeT,GACiB,KAAxBI,KAAKH,iBAEoB,KAAzBG,KAAKF,iBACLE,KAAKM,cAETN,KAAKJ,UAAYA,EACjBI,KAAKF,gBAAkBE,KAAKH,eAC5BG,KAAKH,eAAiB,GAC1B,CACAS,cACI,IAAIC,EACAC,EACAC,EAGJ,GAFAD,EAAOE,WAAWV,KAAKF,iBACvBW,EAAUC,WAAWV,KAAKH,iBACtBc,MAAMH,KAASG,MAAMF,GAAzB,CAEA,OAAQT,KAAKJ,WACT,IAAK,IACDW,EAAUC,EAAOC,EACjB,MACJ,IAAK,IACDF,EAAUC,EAAOC,EACjB,MACJ,IAAK,IACDF,EAAUC,EAAOC,EACjB,MACJ,IAAK,IACDF,EAAUC,EAAOC,EAGzBT,KAAKH,eAAiBU,EACtBP,KAAKJ,eAAYgB,EACjBZ,KAAKF,gBAAkB,EAjBnB,CAkBR,CACAe,sBACIb,KAAKL,oBAAoBmB,UAAYd,KAAKH,eACpB,MAAlBG,KAAKJ,YACLI,KAAKN,qBAAqBoB,UAAY,IAAId,KAAKH,kBAAkBG,KAAKJ,YAE9E,GAS8BL,EAAsBC,GACxDT,EAAcgC,SAASC,IACnBA,EAAOC,iBAAiB,SAAS,KAC7BxB,EAAWS,aAAac,EAAOF,WAC/BrB,EAAWoB,qBAAmB,GAClC,IAEJ3B,EAAiB6B,SAASC,IACtBA,EAAOC,iBAAiB,SAAS,KAC7BxB,EAAWY,eAAeW,EAAOF,WACjCrB,EAAWoB,qBAAmB,GAClC,IAEJ1B,EAAY8B,iBAAiB,SAAUD,IACnCvB,EAAWa,cACXb,EAAWoB,qBAAmB,IAElCvB,EAAe2B,iBAAiB,SAAUD,IACtCvB,EAAWQ,QACXR,EAAWoB,qBAAmB,IAElCxB,EAAa4B,iBAAiB,SAAUD,IACpCvB,EAAWQ,QACXR,EAAWoB,qBAAmB","sources":["src/index.js"],"sourcesContent":["class Calculator {\n    previousOperstorText;\n    currentOperatorText;\n    operation;\n    currentOperand = '';\n    previousOperand = '';\n    constructor(previousOperstorText, currentOperatorText) {\n        this.previousOperstorText = previousOperstorText;\n        this.currentOperatorText = currentOperatorText;\n        this.clear();\n    }\n    clear() {\n        this.currentOperand = \"\";\n        this.previousOperand = \"\";\n    }\n    addingNumber(number) {\n        this.currentOperand = this.currentOperand.toString() + number.toString();\n    }\n    choseOperation(operation) {\n        if (this.currentOperand === \"\")\n            return;\n        if (this.previousOperand !== \"\") {\n            this.computeNumB();\n        }\n        this.operation = operation;\n        this.previousOperand = this.currentOperand;\n        this.currentOperand = \"\";\n    }\n    computeNumB() {\n        let compute;\n        let prev;\n        let current;\n        prev = parseFloat(this.previousOperand);\n        current = parseFloat(this.currentOperand);\n        if (isNaN(prev) || isNaN(current))\n            return;\n        switch (this.operation) {\n            case \"+\":\n                compute = prev + current;\n                break;\n            case \"-\":\n                compute = prev - current;\n                break;\n            case \"*\":\n                compute = prev * current;\n                break;\n            case \"รท\":\n                compute = prev / current;\n                break;\n        }\n        this.currentOperand = compute;\n        this.operation = undefined;\n        this.previousOperand = \"\";\n    }\n    updateAndDisplayNum() {\n        this.currentOperatorText.innerText = this.currentOperand;\n        if (this.operation != null) {\n            this.previousOperstorText.innerText = ` ${this.currentOperand} ${this.operation}`;\n        }\n    }\n}\nconst numberButtons = document.querySelectorAll(\"[data-number]\");\nconst operationButtons = document.querySelectorAll(\"[data-operation]\");\nconst equalButton = document.querySelector(\"[data-equals]\");\nconst deleteButton = document.querySelector(\"[data-delete]\");\nconst clearAllButton = document.querySelector(\"[data-all-clear]\");\nconst previousOperstorText = document.querySelector(\"[data-previousoperend]\");\nconst currentOperatorText = document.querySelector(\"[data-currentoperend]\");\nconst calculator = new Calculator(previousOperstorText, currentOperatorText);\nnumberButtons.forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        calculator.addingNumber(button.innerText);\n        calculator.updateAndDisplayNum();\n    });\n});\noperationButtons.forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        calculator.choseOperation(button.innerText);\n        calculator.updateAndDisplayNum();\n    });\n});\nequalButton.addEventListener(\"click\", (button) => {\n    calculator.computeNumB();\n    calculator.updateAndDisplayNum();\n});\nclearAllButton.addEventListener(\"click\", (button) => {\n    calculator.clear();\n    calculator.updateAndDisplayNum();\n});\ndeleteButton.addEventListener(\"click\", (button) => {\n    calculator.clear();\n    calculator.updateAndDisplayNum();\n});\n"],"names":["$35da740d59af89ba$var$numberButtons","document","querySelectorAll","$35da740d59af89ba$var$operationButtons","$35da740d59af89ba$var$equalButton","querySelector","$35da740d59af89ba$var$deleteButton","$35da740d59af89ba$var$clearAllButton","$35da740d59af89ba$var$previousOperstorText","$35da740d59af89ba$var$currentOperatorText","$35da740d59af89ba$var$calculator","previousOperstorText","currentOperatorText","operation","currentOperand","previousOperand","constructor","this","clear","addingNumber","number","toString","choseOperation","computeNumB","compute","prev","current","parseFloat","isNaN","undefined","updateAndDisplayNum","innerText","forEach","button","addEventListener"],"version":3,"file":"index.56f87daa.js.map"}